Terminals unused in grammar

    LABEL
    PROC
    NONE
    READ


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | ε

    6 type: INT
    7     | REAL

    8 compound_statement: BEG statement_list END

    9 statement_list: statement
   10               | statement_list ';' statement

   11 statement: variable ASSIGN expression
   12          | procedure_statement
   13          | compound_statement

   14 @1: ε

   15 @2: ε

   16 @3: ε

   17 statement: IF expression @1 THEN @2 statement ELSE @3 statement

   18 @4: ε

   19 @5: ε

   20 @6: ε

   21 statement: @4 WHILE @5 expression DO @6 statement
   22          | WRITE '(' variable ')'

   23 variable: ID

   24 procedure_statement: ID

   25 expression: simple_expression
   26           | simple_expression RELOP simple_expression

   27 simple_expression: term
   28                  | simple_expression ADDOP term

   29 term: factor
   30     | term MULOP factor

   31 factor: variable
   32       | NUM
   33       | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 22 33
    ')' (41) 1 22 33
    ',' (44) 3
    '.' (46) 1
    ':' (58) 4
    ';' (59) 1 4 10
    error (256)
    PROGRAM (258) 1
    ID (259) 1 2 3 23 24
    INT (260) 6
    REAL (261) 7
    VAR (262) 4
    NUM (263) 32
    LABEL (264)
    PROC (265)
    NONE (266)
    BEG (267) 8
    END (268) 8
    ASSIGN (269) 11
    ADDOP (270) 28
    MULOP (271) 30
    WRITE (272) 22
    READ (273)
    IF (274) 17
    THEN (275) 17
    ELSE (276) 17
    WHILE (277) 21
    DO (278) 21
    RELOP (279) 26


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    identifier_list (33)
        on left: 2 3
        on right: 1 3 4
    declarations (34)
        on left: 4 5
        on right: 1 4
    type (35)
        on left: 6 7
        on right: 4
    compound_statement (36)
        on left: 8
        on right: 1 13
    statement_list (37)
        on left: 9 10
        on right: 8 10
    statement (38)
        on left: 11 12 13 17 21 22
        on right: 9 10 17 21
    @1 (39)
        on left: 14
        on right: 17
    @2 (40)
        on left: 15
        on right: 17
    @3 (41)
        on left: 16
        on right: 17
    @4 (42)
        on left: 18
        on right: 21
    @5 (43)
        on left: 19
        on right: 21
    @6 (44)
        on left: 20
        on right: 21
    variable (45)
        on left: 23
        on right: 11 22 31
    procedure_statement (46)
        on left: 24
        on right: 12
    expression (47)
        on left: 25 26
        on right: 11 17 21 33
    simple_expression (48)
        on left: 27 28
        on right: 25 26 28
    term (49)
        on left: 29 30
        on right: 27 28 30
    factor (50)
        on left: 31 32 33
        on right: 29 30


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • ID '(' identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID • '(' identifier_list ')' ';' declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PROGRAM ID '(' • identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID •

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: PROGRAM ID '(' identifier_list • ')' ';' declarations compound_statement '.'
    3 identifier_list: identifier_list • ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: PROGRAM ID '(' identifier_list ')' • ';' declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID '(' identifier_list ')' ';' • declarations compound_statement '.'

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations • compound_statement '.'
    4 declarations: declarations • VAR identifier_list ':' type ';'

    VAR  shift, and go to state 13
    BEG  shift, and go to state 14

    compound_statement  go to state 15


State 13

    4 declarations: declarations VAR • identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 16


State 14

    8 compound_statement: BEG • statement_list END

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 20
    statement_list       go to state 21
    statement            go to state 22
    @4                   go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 15

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement • '.'

    '.'  shift, and go to state 26


State 16

    3 identifier_list: identifier_list • ',' ID
    4 declarations: declarations VAR identifier_list • ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 27


State 17

   23 variable: ID •
   24 procedure_statement: ID •

    ASSIGN    reduce using rule 23 (variable)
    $default  reduce using rule 24 (procedure_statement)


State 18

   22 statement: WRITE • '(' variable ')'

    '('  shift, and go to state 28


State 19

   17 statement: IF • expression @1 THEN @2 statement ELSE @3 statement

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable           go to state 32
    expression         go to state 33
    simple_expression  go to state 34
    term               go to state 35
    factor             go to state 36


State 20

   13 statement: compound_statement •

    $default  reduce using rule 13 (statement)


State 21

    8 compound_statement: BEG statement_list • END
   10 statement_list: statement_list • ';' statement

    END  shift, and go to state 37
    ';'  shift, and go to state 38


State 22

    9 statement_list: statement •

    $default  reduce using rule 9 (statement_list)


State 23

   21 statement: @4 • WHILE @5 expression DO @6 statement

    WHILE  shift, and go to state 39


State 24

   11 statement: variable • ASSIGN expression

    ASSIGN  shift, and go to state 40


State 25

   12 statement: procedure_statement •

    $default  reduce using rule 12 (statement)


State 26

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.' •

    $default  reduce using rule 1 (program)


State 27

    4 declarations: declarations VAR identifier_list ':' • type ';'

    INT   shift, and go to state 41
    REAL  shift, and go to state 42

    type  go to state 43


State 28

   22 statement: WRITE '(' • variable ')'

    ID  shift, and go to state 29

    variable  go to state 44


State 29

   23 variable: ID •

    $default  reduce using rule 23 (variable)


State 30

   32 factor: NUM •

    $default  reduce using rule 32 (factor)


State 31

   33 factor: '(' • expression ')'

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable           go to state 32
    expression         go to state 45
    simple_expression  go to state 34
    term               go to state 35
    factor             go to state 36


State 32

   31 factor: variable •

    $default  reduce using rule 31 (factor)


State 33

   17 statement: IF expression • @1 THEN @2 statement ELSE @3 statement

    $default  reduce using rule 14 (@1)

    @1  go to state 46


State 34

   25 expression: simple_expression •
   26           | simple_expression • RELOP simple_expression
   28 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 47
    RELOP  shift, and go to state 48

    $default  reduce using rule 25 (expression)


State 35

   27 simple_expression: term •
   30 term: term • MULOP factor

    MULOP  shift, and go to state 49

    $default  reduce using rule 27 (simple_expression)


State 36

   29 term: factor •

    $default  reduce using rule 29 (term)


State 37

    8 compound_statement: BEG statement_list END •

    $default  reduce using rule 8 (compound_statement)


State 38

   10 statement_list: statement_list ';' • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 20
    statement            go to state 50
    @4                   go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 39

   21 statement: @4 WHILE • @5 expression DO @6 statement

    $default  reduce using rule 19 (@5)

    @5  go to state 51


State 40

   11 statement: variable ASSIGN • expression

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable           go to state 32
    expression         go to state 52
    simple_expression  go to state 34
    term               go to state 35
    factor             go to state 36


State 41

    6 type: INT •

    $default  reduce using rule 6 (type)


State 42

    7 type: REAL •

    $default  reduce using rule 7 (type)


State 43

    4 declarations: declarations VAR identifier_list ':' type • ';'

    ';'  shift, and go to state 53


State 44

   22 statement: WRITE '(' variable • ')'

    ')'  shift, and go to state 54


State 45

   33 factor: '(' expression • ')'

    ')'  shift, and go to state 55


State 46

   17 statement: IF expression @1 • THEN @2 statement ELSE @3 statement

    THEN  shift, and go to state 56


State 47

   28 simple_expression: simple_expression ADDOP • term

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable  go to state 32
    term      go to state 57
    factor    go to state 36


State 48

   26 expression: simple_expression RELOP • simple_expression

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable           go to state 32
    simple_expression  go to state 58
    term               go to state 35
    factor             go to state 36


State 49

   30 term: term MULOP • factor

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable  go to state 32
    factor    go to state 59


State 50

   10 statement_list: statement_list ';' statement •

    $default  reduce using rule 10 (statement_list)


State 51

   21 statement: @4 WHILE @5 • expression DO @6 statement

    ID   shift, and go to state 29
    NUM  shift, and go to state 30
    '('  shift, and go to state 31

    variable           go to state 32
    expression         go to state 60
    simple_expression  go to state 34
    term               go to state 35
    factor             go to state 36


State 52

   11 statement: variable ASSIGN expression •

    $default  reduce using rule 11 (statement)


State 53

    4 declarations: declarations VAR identifier_list ':' type ';' •

    $default  reduce using rule 4 (declarations)


State 54

   22 statement: WRITE '(' variable ')' •

    $default  reduce using rule 22 (statement)


State 55

   33 factor: '(' expression ')' •

    $default  reduce using rule 33 (factor)


State 56

   17 statement: IF expression @1 THEN • @2 statement ELSE @3 statement

    $default  reduce using rule 15 (@2)

    @2  go to state 61


State 57

   28 simple_expression: simple_expression ADDOP term •
   30 term: term • MULOP factor

    MULOP  shift, and go to state 49

    $default  reduce using rule 28 (simple_expression)


State 58

   26 expression: simple_expression RELOP simple_expression •
   28 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 47

    $default  reduce using rule 26 (expression)


State 59

   30 term: term MULOP factor •

    $default  reduce using rule 30 (term)


State 60

   21 statement: @4 WHILE @5 expression • DO @6 statement

    DO  shift, and go to state 62


State 61

   17 statement: IF expression @1 THEN @2 • statement ELSE @3 statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 20
    statement            go to state 63
    @4                   go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 62

   21 statement: @4 WHILE @5 expression DO • @6 statement

    $default  reduce using rule 20 (@6)

    @6  go to state 64


State 63

   17 statement: IF expression @1 THEN @2 statement • ELSE @3 statement

    ELSE  shift, and go to state 65


State 64

   21 statement: @4 WHILE @5 expression DO @6 • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 20
    statement            go to state 66
    @4                   go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 65

   17 statement: IF expression @1 THEN @2 statement ELSE • @3 statement

    $default  reduce using rule 16 (@3)

    @3  go to state 67


State 66

   21 statement: @4 WHILE @5 expression DO @6 statement •

    $default  reduce using rule 21 (statement)


State 67

   17 statement: IF expression @1 THEN @2 statement ELSE @3 • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 20
    statement            go to state 68
    @4                   go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 68

   17 statement: IF expression @1 THEN @2 statement ELSE @3 statement •

    $default  reduce using rule 17 (statement)
