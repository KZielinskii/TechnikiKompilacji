Terminals unused in grammar

    LABEL
    PROC
    NONE
    READ


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | ε

    6 type: INT
    7     | REAL

    8 compound_statement: BEG statement_list END

    9 statement_list: statement
   10               | statement_list ';' statement

   11 statement: variable ASSIGN expression
   12          | procedure_statement
   13          | compound_statement
   14          | IF variable RELOP simple_expression THEN statement ELSE statement
   15          | WHILE expression DO statement
   16          | WRITE '(' variable ')'

   17 variable: ID

   18 procedure_statement: ID

   19 expression: simple_expression
   20           | simple_expression RELOP simple_expression

   21 simple_expression: term
   22                  | simple_expression ADDOP term

   23 term: factor
   24     | term MULOP factor

   25 factor: variable
   26       | NUM
   27       | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 16 27
    ')' (41) 1 16 27
    ',' (44) 3
    '.' (46) 1
    ':' (58) 4
    ';' (59) 1 4 10
    error (256)
    PROGRAM (258) 1
    ID (259) 1 2 3 17 18
    INT (260) 6
    REAL (261) 7
    VAR (262) 4
    NUM (263) 26
    LABEL (264)
    PROC (265)
    NONE (266)
    BEG (267) 8
    END (268) 8
    ASSIGN (269) 11
    ADDOP (270) 22
    MULOP (271) 24
    WRITE (272) 16
    READ (273)
    IF (274) 14
    THEN (275) 14
    ELSE (276) 14
    WHILE (277) 15
    DO (278) 15
    RELOP (279) 14 20


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    identifier_list (33)
        on left: 2 3
        on right: 1 3 4
    declarations (34)
        on left: 4 5
        on right: 1 4
    type (35)
        on left: 6 7
        on right: 4
    compound_statement (36)
        on left: 8
        on right: 1 13
    statement_list (37)
        on left: 9 10
        on right: 8 10
    statement (38)
        on left: 11 12 13 14 15 16
        on right: 9 10 14 15
    variable (39)
        on left: 17
        on right: 11 14 16 25
    procedure_statement (40)
        on left: 18
        on right: 12
    expression (41)
        on left: 19 20
        on right: 11 15 27
    simple_expression (42)
        on left: 21 22
        on right: 14 19 20 22
    term (43)
        on left: 23 24
        on right: 21 22 24
    factor (44)
        on left: 25 26 27
        on right: 23 24


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • ID '(' identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID • '(' identifier_list ')' ';' declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PROGRAM ID '(' • identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID •

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: PROGRAM ID '(' identifier_list • ')' ';' declarations compound_statement '.'
    3 identifier_list: identifier_list • ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: PROGRAM ID '(' identifier_list ')' • ';' declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID '(' identifier_list ')' ';' • declarations compound_statement '.'

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations • compound_statement '.'
    4 declarations: declarations • VAR identifier_list ':' type ';'

    VAR  shift, and go to state 13
    BEG  shift, and go to state 14

    compound_statement  go to state 15


State 13

    4 declarations: declarations VAR • identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 16


State 14

    8 compound_statement: BEG • statement_list END

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19
    WHILE  shift, and go to state 20

    compound_statement   go to state 21
    statement_list       go to state 22
    statement            go to state 23
    variable             go to state 24
    procedure_statement  go to state 25


State 15

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement • '.'

    '.'  shift, and go to state 26


State 16

    3 identifier_list: identifier_list • ',' ID
    4 declarations: declarations VAR identifier_list • ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 27


State 17

   17 variable: ID •
   18 procedure_statement: ID •

    ASSIGN    reduce using rule 17 (variable)
    $default  reduce using rule 18 (procedure_statement)


State 18

   16 statement: WRITE • '(' variable ')'

    '('  shift, and go to state 28


State 19

   14 statement: IF • variable RELOP simple_expression THEN statement ELSE statement

    ID  shift, and go to state 29

    variable  go to state 30


State 20

   15 statement: WHILE • expression DO statement

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable           go to state 33
    expression         go to state 34
    simple_expression  go to state 35
    term               go to state 36
    factor             go to state 37


State 21

   13 statement: compound_statement •

    $default  reduce using rule 13 (statement)


State 22

    8 compound_statement: BEG statement_list • END
   10 statement_list: statement_list • ';' statement

    END  shift, and go to state 38
    ';'  shift, and go to state 39


State 23

    9 statement_list: statement •

    $default  reduce using rule 9 (statement_list)


State 24

   11 statement: variable • ASSIGN expression

    ASSIGN  shift, and go to state 40


State 25

   12 statement: procedure_statement •

    $default  reduce using rule 12 (statement)


State 26

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.' •

    $default  reduce using rule 1 (program)


State 27

    4 declarations: declarations VAR identifier_list ':' • type ';'

    INT   shift, and go to state 41
    REAL  shift, and go to state 42

    type  go to state 43


State 28

   16 statement: WRITE '(' • variable ')'

    ID  shift, and go to state 29

    variable  go to state 44


State 29

   17 variable: ID •

    $default  reduce using rule 17 (variable)


State 30

   14 statement: IF variable • RELOP simple_expression THEN statement ELSE statement

    RELOP  shift, and go to state 45


State 31

   26 factor: NUM •

    $default  reduce using rule 26 (factor)


State 32

   27 factor: '(' • expression ')'

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable           go to state 33
    expression         go to state 46
    simple_expression  go to state 35
    term               go to state 36
    factor             go to state 37


State 33

   25 factor: variable •

    $default  reduce using rule 25 (factor)


State 34

   15 statement: WHILE expression • DO statement

    DO  shift, and go to state 47


State 35

   19 expression: simple_expression •
   20           | simple_expression • RELOP simple_expression
   22 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 48
    RELOP  shift, and go to state 49

    $default  reduce using rule 19 (expression)


State 36

   21 simple_expression: term •
   24 term: term • MULOP factor

    MULOP  shift, and go to state 50

    $default  reduce using rule 21 (simple_expression)


State 37

   23 term: factor •

    $default  reduce using rule 23 (term)


State 38

    8 compound_statement: BEG statement_list END •

    $default  reduce using rule 8 (compound_statement)


State 39

   10 statement_list: statement_list ';' • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19
    WHILE  shift, and go to state 20

    compound_statement   go to state 21
    statement            go to state 51
    variable             go to state 24
    procedure_statement  go to state 25


State 40

   11 statement: variable ASSIGN • expression

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable           go to state 33
    expression         go to state 52
    simple_expression  go to state 35
    term               go to state 36
    factor             go to state 37


State 41

    6 type: INT •

    $default  reduce using rule 6 (type)


State 42

    7 type: REAL •

    $default  reduce using rule 7 (type)


State 43

    4 declarations: declarations VAR identifier_list ':' type • ';'

    ';'  shift, and go to state 53


State 44

   16 statement: WRITE '(' variable • ')'

    ')'  shift, and go to state 54


State 45

   14 statement: IF variable RELOP • simple_expression THEN statement ELSE statement

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable           go to state 33
    simple_expression  go to state 55
    term               go to state 36
    factor             go to state 37


State 46

   27 factor: '(' expression • ')'

    ')'  shift, and go to state 56


State 47

   15 statement: WHILE expression DO • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19
    WHILE  shift, and go to state 20

    compound_statement   go to state 21
    statement            go to state 57
    variable             go to state 24
    procedure_statement  go to state 25


State 48

   22 simple_expression: simple_expression ADDOP • term

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable  go to state 33
    term      go to state 58
    factor    go to state 37


State 49

   20 expression: simple_expression RELOP • simple_expression

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable           go to state 33
    simple_expression  go to state 59
    term               go to state 36
    factor             go to state 37


State 50

   24 term: term MULOP • factor

    ID   shift, and go to state 29
    NUM  shift, and go to state 31
    '('  shift, and go to state 32

    variable  go to state 33
    factor    go to state 60


State 51

   10 statement_list: statement_list ';' statement •

    $default  reduce using rule 10 (statement_list)


State 52

   11 statement: variable ASSIGN expression •

    $default  reduce using rule 11 (statement)


State 53

    4 declarations: declarations VAR identifier_list ':' type ';' •

    $default  reduce using rule 4 (declarations)


State 54

   16 statement: WRITE '(' variable ')' •

    $default  reduce using rule 16 (statement)


State 55

   14 statement: IF variable RELOP simple_expression • THEN statement ELSE statement
   22 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 48
    THEN   shift, and go to state 61


State 56

   27 factor: '(' expression ')' •

    $default  reduce using rule 27 (factor)


State 57

   15 statement: WHILE expression DO statement •

    $default  reduce using rule 15 (statement)


State 58

   22 simple_expression: simple_expression ADDOP term •
   24 term: term • MULOP factor

    MULOP  shift, and go to state 50

    $default  reduce using rule 22 (simple_expression)


State 59

   20 expression: simple_expression RELOP simple_expression •
   22 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 20 (expression)


State 60

   24 term: term MULOP factor •

    $default  reduce using rule 24 (term)


State 61

   14 statement: IF variable RELOP simple_expression THEN • statement ELSE statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19
    WHILE  shift, and go to state 20

    compound_statement   go to state 21
    statement            go to state 62
    variable             go to state 24
    procedure_statement  go to state 25


State 62

   14 statement: IF variable RELOP simple_expression THEN statement • ELSE statement

    ELSE  shift, and go to state 63


State 63

   14 statement: IF variable RELOP simple_expression THEN statement ELSE • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    IF     shift, and go to state 19
    WHILE  shift, and go to state 20

    compound_statement   go to state 21
    statement            go to state 64
    variable             go to state 24
    procedure_statement  go to state 25


State 64

   14 statement: IF variable RELOP simple_expression THEN statement ELSE statement •

    $default  reduce using rule 14 (statement)
