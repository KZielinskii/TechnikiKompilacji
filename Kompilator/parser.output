Terminals unused in grammar

    LABEL
    PROC
    NONE


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 $@2: ε

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.'

    4 identifier_list: ID
    5                | identifier_list ',' ID

    6 declarations: declarations VAR identifier_list ':' type ';'
    7             | ε

    8 type: standerd_type

    9 standerd_type: INT
   10              | REAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | ε

   13 $@3: ε

   14 subprogram_declaration: subprogram_head $@3 declarations compound_statement

   15 $@4: ε

   16 subprogram_head: FUNCTION ID $@4 arguments ':' standerd_type ';'

   17 $@5: ε

   18 subprogram_head: PROCEDURE ID $@5 arguments ';'

   19 arguments: '(' parametr_list ')'
   20          | ε

   21 parametr_list: parametr
   22              | parametr_list ';' parametr

   23 parametr: identifier_list ':' type

   24 compound_statement: BEG optional_statments END

   25 optional_statments: statement_list
   26                   | ε

   27 statement_list: statement
   28               | statement_list ';' statement

   29 statement: variable ASSIGN expression
   30          | procedure_statement
   31          | compound_statement

   32 @6: ε

   33 @7: ε

   34 @8: ε

   35 statement: IF expression @6 THEN @7 statement ELSE @8 statement

   36 @9: ε

   37 @10: ε

   38 @11: ε

   39 statement: @9 WHILE @10 expression DO @11 statement
   40          | READ '(' expression_list ')'
   41          | WRITE '(' expression_list ')'

   42 variable: ID

   43 procedure_statement: ID
   44                    | ID '(' expression_list ')'

   45 expression_list: expression
   46                | expression_list ',' expression

   47 expression: simple_expression
   48           | simple_expression RELOP simple_expression

   49 simple_expression: term
   50                  | ADDOP term
   51                  | simple_expression ADDOP term
   52                  | simple_expression AND_ term
   53                  | simple_expression OR_ term

   54 term: factor
   55     | term MULOP factor

   56 factor: variable
   57       | ID '(' expression_list ')'
   58       | NUM
   59       | '(' expression ')'
   60       | NOT factor


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 19 40 41 44 57 59
    ')' (41) 3 19 40 41 44 57 59
    ',' (44) 5 46
    '.' (46) 3
    ':' (58) 6 16 23
    ';' (59) 3 6 11 16 18 22 28
    error (256)
    PROGRAM (258) 3
    ID (259) 3 4 5 16 18 42 43 44 57
    INT (260) 9
    REAL (261) 10
    VAR (262) 6
    NUM (263) 58
    LABEL (264)
    PROC (265)
    NONE (266)
    BEG (267) 24
    END (268) 24
    ASSIGN (269) 29
    ADDOP (270) 50 51
    MULOP (271) 55
    WRITE (272) 41
    READ (273) 40
    IF (274) 35
    THEN (275) 35
    ELSE (276) 35
    WHILE (277) 39
    DO (278) 39
    RELOP (279) 48
    NOT (280) 60
    FUNCTION (281) 16
    PROCEDURE (282) 18
    OR_ (283) 53
    AND_ (284) 52


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 3
        on right: 0
    $@1 (38)
        on left: 1
        on right: 3
    $@2 (39)
        on left: 2
        on right: 3
    identifier_list (40)
        on left: 4 5
        on right: 3 5 6 23
    declarations (41)
        on left: 6 7
        on right: 3 6 14
    type (42)
        on left: 8
        on right: 6 23
    standerd_type (43)
        on left: 9 10
        on right: 8 16
    subprogram_declarations (44)
        on left: 11 12
        on right: 3 11
    subprogram_declaration (45)
        on left: 14
        on right: 11
    $@3 (46)
        on left: 13
        on right: 14
    subprogram_head (47)
        on left: 16 18
        on right: 14
    $@4 (48)
        on left: 15
        on right: 16
    $@5 (49)
        on left: 17
        on right: 18
    arguments (50)
        on left: 19 20
        on right: 16 18
    parametr_list (51)
        on left: 21 22
        on right: 19 22
    parametr (52)
        on left: 23
        on right: 21 22
    compound_statement (53)
        on left: 24
        on right: 3 14 31
    optional_statments (54)
        on left: 25 26
        on right: 24
    statement_list (55)
        on left: 27 28
        on right: 25 28
    statement (56)
        on left: 29 30 31 35 39 40 41
        on right: 27 28 35 39
    @6 (57)
        on left: 32
        on right: 35
    @7 (58)
        on left: 33
        on right: 35
    @8 (59)
        on left: 34
        on right: 35
    @9 (60)
        on left: 36
        on right: 39
    @10 (61)
        on left: 37
        on right: 39
    @11 (62)
        on left: 38
        on right: 39
    variable (63)
        on left: 42
        on right: 29 56
    procedure_statement (64)
        on left: 43 44
        on right: 30
    expression_list (65)
        on left: 45 46
        on right: 40 41 44 46 57
    expression (66)
        on left: 47 48
        on right: 29 35 39 45 46 59
    simple_expression (67)
        on left: 49 50 51 52 53
        on right: 47 48 51 52 53
    term (68)
        on left: 54 55
        on right: 49 50 51 52 53 55
    factor (69)
        on left: 56 57 58 59 60
        on right: 54 55 60


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    3 program: PROGRAM • ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    3 program: PROGRAM ID • $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    3 program: PROGRAM ID $@1 • '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.'

    '('  shift, and go to state 6


State 6

    3 program: PROGRAM ID $@1 '(' • identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    4 identifier_list: ID •

    $default  reduce using rule 4 (identifier_list)


State 8

    3 program: PROGRAM ID $@1 '(' identifier_list • ')' ';' declarations subprogram_declarations $@2 compound_statement '.'
    5 identifier_list: identifier_list • ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    3 program: PROGRAM ID $@1 '(' identifier_list ')' • ';' declarations subprogram_declarations $@2 compound_statement '.'

    ';'  shift, and go to state 11


State 10

    5 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 12


State 11

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' • declarations subprogram_declarations $@2 compound_statement '.'

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 12

    5 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 5 (identifier_list)


State 13

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations • subprogram_declarations $@2 compound_statement '.'
    6 declarations: declarations • VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 15


State 14

    6 declarations: declarations VAR • identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


State 15

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations • $@2 compound_statement '.'
   11 subprogram_declarations: subprogram_declarations • subprogram_declaration ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18

    $default  reduce using rule 2 ($@2)

    $@2                     go to state 19
    subprogram_declaration  go to state 20
    subprogram_head         go to state 21


State 16

    5 identifier_list: identifier_list • ',' ID
    6 declarations: declarations VAR identifier_list • ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 22


State 17

   16 subprogram_head: FUNCTION • ID $@4 arguments ':' standerd_type ';'

    ID  shift, and go to state 23


State 18

   18 subprogram_head: PROCEDURE • ID $@5 arguments ';'

    ID  shift, and go to state 24


State 19

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 • compound_statement '.'

    BEG  shift, and go to state 25

    compound_statement  go to state 26


State 20

   11 subprogram_declarations: subprogram_declarations subprogram_declaration • ';'

    ';'  shift, and go to state 27


State 21

   14 subprogram_declaration: subprogram_head • $@3 declarations compound_statement

    $default  reduce using rule 13 ($@3)

    $@3  go to state 28


State 22

    6 declarations: declarations VAR identifier_list ':' • type ';'

    INT   shift, and go to state 29
    REAL  shift, and go to state 30

    type           go to state 31
    standerd_type  go to state 32


State 23

   16 subprogram_head: FUNCTION ID • $@4 arguments ':' standerd_type ';'

    $default  reduce using rule 15 ($@4)

    $@4  go to state 33


State 24

   18 subprogram_head: PROCEDURE ID • $@5 arguments ';'

    $default  reduce using rule 17 ($@5)

    $@5  go to state 34


State 25

   24 compound_statement: BEG • optional_statments END

    ID     shift, and go to state 35
    BEG    shift, and go to state 25
    WRITE  shift, and go to state 36
    READ   shift, and go to state 37
    IF     shift, and go to state 38

    WHILE     reduce using rule 36 (@9)
    $default  reduce using rule 26 (optional_statments)

    compound_statement   go to state 39
    optional_statments   go to state 40
    statement_list       go to state 41
    statement            go to state 42
    @9                   go to state 43
    variable             go to state 44
    procedure_statement  go to state 45


State 26

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement • '.'

    '.'  shift, and go to state 46


State 27

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' •

    $default  reduce using rule 11 (subprogram_declarations)


State 28

   14 subprogram_declaration: subprogram_head $@3 • declarations compound_statement

    $default  reduce using rule 7 (declarations)

    declarations  go to state 47


State 29

    9 standerd_type: INT •

    $default  reduce using rule 9 (standerd_type)


State 30

   10 standerd_type: REAL •

    $default  reduce using rule 10 (standerd_type)


State 31

    6 declarations: declarations VAR identifier_list ':' type • ';'

    ';'  shift, and go to state 48


State 32

    8 type: standerd_type •

    $default  reduce using rule 8 (type)


State 33

   16 subprogram_head: FUNCTION ID $@4 • arguments ':' standerd_type ';'

    '('  shift, and go to state 49

    $default  reduce using rule 20 (arguments)

    arguments  go to state 50


State 34

   18 subprogram_head: PROCEDURE ID $@5 • arguments ';'

    '('  shift, and go to state 49

    $default  reduce using rule 20 (arguments)

    arguments  go to state 51


State 35

   42 variable: ID •
   43 procedure_statement: ID •
   44                    | ID • '(' expression_list ')'

    '('  shift, and go to state 52

    ASSIGN    reduce using rule 42 (variable)
    $default  reduce using rule 43 (procedure_statement)


State 36

   41 statement: WRITE • '(' expression_list ')'

    '('  shift, and go to state 53


State 37

   40 statement: READ • '(' expression_list ')'

    '('  shift, and go to state 54


State 38

   35 statement: IF • expression @6 THEN @7 statement ELSE @8 statement

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression         go to state 61
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 39

   31 statement: compound_statement •

    $default  reduce using rule 31 (statement)


State 40

   24 compound_statement: BEG optional_statments • END

    END  shift, and go to state 65


State 41

   25 optional_statments: statement_list •
   28 statement_list: statement_list • ';' statement

    ';'  shift, and go to state 66

    $default  reduce using rule 25 (optional_statments)


State 42

   27 statement_list: statement •

    $default  reduce using rule 27 (statement_list)


State 43

   39 statement: @9 • WHILE @10 expression DO @11 statement

    WHILE  shift, and go to state 67


State 44

   29 statement: variable • ASSIGN expression

    ASSIGN  shift, and go to state 68


State 45

   30 statement: procedure_statement •

    $default  reduce using rule 30 (statement)


State 46

    3 program: PROGRAM ID $@1 '(' identifier_list ')' ';' declarations subprogram_declarations $@2 compound_statement '.' •

    $default  reduce using rule 3 (program)


State 47

    6 declarations: declarations • VAR identifier_list ':' type ';'
   14 subprogram_declaration: subprogram_head $@3 declarations • compound_statement

    VAR  shift, and go to state 14
    BEG  shift, and go to state 25

    compound_statement  go to state 69


State 48

    6 declarations: declarations VAR identifier_list ':' type ';' •

    $default  reduce using rule 6 (declarations)


State 49

   19 arguments: '(' • parametr_list ')'

    ID  shift, and go to state 7

    identifier_list  go to state 70
    parametr_list    go to state 71
    parametr         go to state 72


State 50

   16 subprogram_head: FUNCTION ID $@4 arguments • ':' standerd_type ';'

    ':'  shift, and go to state 73


State 51

   18 subprogram_head: PROCEDURE ID $@5 arguments • ';'

    ';'  shift, and go to state 74


State 52

   44 procedure_statement: ID '(' • expression_list ')'

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression_list    go to state 75
    expression         go to state 76
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 53

   41 statement: WRITE '(' • expression_list ')'

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression_list    go to state 77
    expression         go to state 76
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 54

   40 statement: READ '(' • expression_list ')'

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression_list    go to state 78
    expression         go to state 76
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 55

   42 variable: ID •
   57 factor: ID • '(' expression_list ')'

    '('  shift, and go to state 79

    $default  reduce using rule 42 (variable)


State 56

   58 factor: NUM •

    $default  reduce using rule 58 (factor)


State 57

   50 simple_expression: ADDOP • term

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    term      go to state 80
    factor    go to state 64


State 58

   60 factor: NOT • factor

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    factor    go to state 81


State 59

   59 factor: '(' • expression ')'

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression         go to state 82
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 60

   56 factor: variable •

    $default  reduce using rule 56 (factor)


State 61

   35 statement: IF expression • @6 THEN @7 statement ELSE @8 statement

    $default  reduce using rule 32 (@6)

    @6  go to state 83


State 62

   47 expression: simple_expression •
   48           | simple_expression • RELOP simple_expression
   51 simple_expression: simple_expression • ADDOP term
   52                  | simple_expression • AND_ term
   53                  | simple_expression • OR_ term

    ADDOP  shift, and go to state 84
    RELOP  shift, and go to state 85
    OR_    shift, and go to state 86
    AND_   shift, and go to state 87

    $default  reduce using rule 47 (expression)


State 63

   49 simple_expression: term •
   55 term: term • MULOP factor

    MULOP  shift, and go to state 88

    $default  reduce using rule 49 (simple_expression)


State 64

   54 term: factor •

    $default  reduce using rule 54 (term)


State 65

   24 compound_statement: BEG optional_statments END •

    $default  reduce using rule 24 (compound_statement)


State 66

   28 statement_list: statement_list ';' • statement

    ID     shift, and go to state 35
    BEG    shift, and go to state 25
    WRITE  shift, and go to state 36
    READ   shift, and go to state 37
    IF     shift, and go to state 38

    $default  reduce using rule 36 (@9)

    compound_statement   go to state 39
    statement            go to state 89
    @9                   go to state 43
    variable             go to state 44
    procedure_statement  go to state 45


State 67

   39 statement: @9 WHILE • @10 expression DO @11 statement

    $default  reduce using rule 37 (@10)

    @10  go to state 90


State 68

   29 statement: variable ASSIGN • expression

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression         go to state 91
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 69

   14 subprogram_declaration: subprogram_head $@3 declarations compound_statement •

    $default  reduce using rule 14 (subprogram_declaration)


State 70

    5 identifier_list: identifier_list • ',' ID
   23 parametr: identifier_list • ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 92


State 71

   19 arguments: '(' parametr_list • ')'
   22 parametr_list: parametr_list • ';' parametr

    ')'  shift, and go to state 93
    ';'  shift, and go to state 94


State 72

   21 parametr_list: parametr •

    $default  reduce using rule 21 (parametr_list)


State 73

   16 subprogram_head: FUNCTION ID $@4 arguments ':' • standerd_type ';'

    INT   shift, and go to state 29
    REAL  shift, and go to state 30

    standerd_type  go to state 95


State 74

   18 subprogram_head: PROCEDURE ID $@5 arguments ';' •

    $default  reduce using rule 18 (subprogram_head)


State 75

   44 procedure_statement: ID '(' expression_list • ')'
   46 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


State 76

   45 expression_list: expression •

    $default  reduce using rule 45 (expression_list)


State 77

   41 statement: WRITE '(' expression_list • ')'
   46 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 98
    ','  shift, and go to state 97


State 78

   40 statement: READ '(' expression_list • ')'
   46 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 99
    ','  shift, and go to state 97


State 79

   57 factor: ID '(' • expression_list ')'

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression_list    go to state 100
    expression         go to state 76
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 80

   50 simple_expression: ADDOP term •
   55 term: term • MULOP factor

    MULOP  shift, and go to state 88

    $default  reduce using rule 50 (simple_expression)


State 81

   60 factor: NOT factor •

    $default  reduce using rule 60 (factor)


State 82

   59 factor: '(' expression • ')'

    ')'  shift, and go to state 101


State 83

   35 statement: IF expression @6 • THEN @7 statement ELSE @8 statement

    THEN  shift, and go to state 102


State 84

   51 simple_expression: simple_expression ADDOP • term

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    term      go to state 103
    factor    go to state 64


State 85

   48 expression: simple_expression RELOP • simple_expression

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    simple_expression  go to state 104
    term               go to state 63
    factor             go to state 64


State 86

   53 simple_expression: simple_expression OR_ • term

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    term      go to state 105
    factor    go to state 64


State 87

   52 simple_expression: simple_expression AND_ • term

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    term      go to state 106
    factor    go to state 64


State 88

   55 term: term MULOP • factor

    ID   shift, and go to state 55
    NUM  shift, and go to state 56
    NOT  shift, and go to state 58
    '('  shift, and go to state 59

    variable  go to state 60
    factor    go to state 107


State 89

   28 statement_list: statement_list ';' statement •

    $default  reduce using rule 28 (statement_list)


State 90

   39 statement: @9 WHILE @10 • expression DO @11 statement

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression         go to state 108
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 91

   29 statement: variable ASSIGN expression •

    $default  reduce using rule 29 (statement)


State 92

   23 parametr: identifier_list ':' • type

    INT   shift, and go to state 29
    REAL  shift, and go to state 30

    type           go to state 109
    standerd_type  go to state 32


State 93

   19 arguments: '(' parametr_list ')' •

    $default  reduce using rule 19 (arguments)


State 94

   22 parametr_list: parametr_list ';' • parametr

    ID  shift, and go to state 7

    identifier_list  go to state 70
    parametr         go to state 110


State 95

   16 subprogram_head: FUNCTION ID $@4 arguments ':' standerd_type • ';'

    ';'  shift, and go to state 111


State 96

   44 procedure_statement: ID '(' expression_list ')' •

    $default  reduce using rule 44 (procedure_statement)


State 97

   46 expression_list: expression_list ',' • expression

    ID     shift, and go to state 55
    NUM    shift, and go to state 56
    ADDOP  shift, and go to state 57
    NOT    shift, and go to state 58
    '('    shift, and go to state 59

    variable           go to state 60
    expression         go to state 112
    simple_expression  go to state 62
    term               go to state 63
    factor             go to state 64


State 98

   41 statement: WRITE '(' expression_list ')' •

    $default  reduce using rule 41 (statement)


State 99

   40 statement: READ '(' expression_list ')' •

    $default  reduce using rule 40 (statement)


State 100

   46 expression_list: expression_list • ',' expression
   57 factor: ID '(' expression_list • ')'

    ')'  shift, and go to state 113
    ','  shift, and go to state 97


State 101

   59 factor: '(' expression ')' •

    $default  reduce using rule 59 (factor)


State 102

   35 statement: IF expression @6 THEN • @7 statement ELSE @8 statement

    $default  reduce using rule 33 (@7)

    @7  go to state 114


State 103

   51 simple_expression: simple_expression ADDOP term •
   55 term: term • MULOP factor

    MULOP  shift, and go to state 88

    $default  reduce using rule 51 (simple_expression)


State 104

   48 expression: simple_expression RELOP simple_expression •
   51 simple_expression: simple_expression • ADDOP term
   52                  | simple_expression • AND_ term
   53                  | simple_expression • OR_ term

    ADDOP  shift, and go to state 84
    OR_    shift, and go to state 86
    AND_   shift, and go to state 87

    $default  reduce using rule 48 (expression)


State 105

   53 simple_expression: simple_expression OR_ term •
   55 term: term • MULOP factor

    MULOP  shift, and go to state 88

    $default  reduce using rule 53 (simple_expression)


State 106

   52 simple_expression: simple_expression AND_ term •
   55 term: term • MULOP factor

    MULOP  shift, and go to state 88

    $default  reduce using rule 52 (simple_expression)


State 107

   55 term: term MULOP factor •

    $default  reduce using rule 55 (term)


State 108

   39 statement: @9 WHILE @10 expression • DO @11 statement

    DO  shift, and go to state 115


State 109

   23 parametr: identifier_list ':' type •

    $default  reduce using rule 23 (parametr)


State 110

   22 parametr_list: parametr_list ';' parametr •

    $default  reduce using rule 22 (parametr_list)


State 111

   16 subprogram_head: FUNCTION ID $@4 arguments ':' standerd_type ';' •

    $default  reduce using rule 16 (subprogram_head)


State 112

   46 expression_list: expression_list ',' expression •

    $default  reduce using rule 46 (expression_list)


State 113

   57 factor: ID '(' expression_list ')' •

    $default  reduce using rule 57 (factor)


State 114

   35 statement: IF expression @6 THEN @7 • statement ELSE @8 statement

    ID     shift, and go to state 35
    BEG    shift, and go to state 25
    WRITE  shift, and go to state 36
    READ   shift, and go to state 37
    IF     shift, and go to state 38

    $default  reduce using rule 36 (@9)

    compound_statement   go to state 39
    statement            go to state 116
    @9                   go to state 43
    variable             go to state 44
    procedure_statement  go to state 45


State 115

   39 statement: @9 WHILE @10 expression DO • @11 statement

    $default  reduce using rule 38 (@11)

    @11  go to state 117


State 116

   35 statement: IF expression @6 THEN @7 statement • ELSE @8 statement

    ELSE  shift, and go to state 118


State 117

   39 statement: @9 WHILE @10 expression DO @11 • statement

    ID     shift, and go to state 35
    BEG    shift, and go to state 25
    WRITE  shift, and go to state 36
    READ   shift, and go to state 37
    IF     shift, and go to state 38

    $default  reduce using rule 36 (@9)

    compound_statement   go to state 39
    statement            go to state 119
    @9                   go to state 43
    variable             go to state 44
    procedure_statement  go to state 45


State 118

   35 statement: IF expression @6 THEN @7 statement ELSE • @8 statement

    $default  reduce using rule 34 (@8)

    @8  go to state 120


State 119

   39 statement: @9 WHILE @10 expression DO @11 statement •

    $default  reduce using rule 39 (statement)


State 120

   35 statement: IF expression @6 THEN @7 statement ELSE @8 • statement

    ID     shift, and go to state 35
    BEG    shift, and go to state 25
    WRITE  shift, and go to state 36
    READ   shift, and go to state 37
    IF     shift, and go to state 38

    $default  reduce using rule 36 (@9)

    compound_statement   go to state 39
    statement            go to state 121
    @9                   go to state 43
    variable             go to state 44
    procedure_statement  go to state 45


State 121

   35 statement: IF expression @6 THEN @7 statement ELSE @8 statement •

    $default  reduce using rule 35 (statement)
