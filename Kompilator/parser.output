Terminals unused in grammar

    LABEL
    PROC
    NONE


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | ε

    6 type: INT
    7     | REAL

    8 compound_statement: BEG statement_list END

    9 statement_list: statement
   10               | statement_list ';' statement

   11 statement: variable ASSIGN expression
   12          | procedure_statement
   13          | compound_statement

   14 @1: ε

   15 @2: ε

   16 @3: ε

   17 statement: IF expression @1 THEN @2 statement ELSE @3 statement

   18 @4: ε

   19 @5: ε

   20 @6: ε

   21 statement: @4 WHILE @5 expression DO @6 statement
   22          | READ '(' identifier_list ')'
   23          | WRITE '(' identifier_list ')'

   24 variable: ID

   25 procedure_statement: ID

   26 expression: simple_expression
   27           | simple_expression RELOP simple_expression

   28 simple_expression: term
   29                  | simple_expression ADDOP term

   30 term: factor
   31     | term MULOP factor

   32 factor: variable
   33       | NUM
   34       | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 22 23 34
    ')' (41) 1 22 23 34
    ',' (44) 3
    '.' (46) 1
    ':' (58) 4
    ';' (59) 1 4 10
    error (256)
    PROGRAM (258) 1
    ID (259) 1 2 3 24 25
    INT (260) 6
    REAL (261) 7
    VAR (262) 4
    NUM (263) 33
    LABEL (264)
    PROC (265)
    NONE (266)
    BEG (267) 8
    END (268) 8
    ASSIGN (269) 11
    ADDOP (270) 29
    MULOP (271) 31
    WRITE (272) 23
    READ (273) 22
    IF (274) 17
    THEN (275) 17
    ELSE (276) 17
    WHILE (277) 21
    DO (278) 21
    RELOP (279) 27


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    identifier_list (33)
        on left: 2 3
        on right: 1 3 4 22 23
    declarations (34)
        on left: 4 5
        on right: 1 4
    type (35)
        on left: 6 7
        on right: 4
    compound_statement (36)
        on left: 8
        on right: 1 13
    statement_list (37)
        on left: 9 10
        on right: 8 10
    statement (38)
        on left: 11 12 13 17 21 22 23
        on right: 9 10 17 21
    @1 (39)
        on left: 14
        on right: 17
    @2 (40)
        on left: 15
        on right: 17
    @3 (41)
        on left: 16
        on right: 17
    @4 (42)
        on left: 18
        on right: 21
    @5 (43)
        on left: 19
        on right: 21
    @6 (44)
        on left: 20
        on right: 21
    variable (45)
        on left: 24
        on right: 11 32
    procedure_statement (46)
        on left: 25
        on right: 12
    expression (47)
        on left: 26 27
        on right: 11 17 21 34
    simple_expression (48)
        on left: 28 29
        on right: 26 27 29
    term (49)
        on left: 30 31
        on right: 28 29 31
    factor (50)
        on left: 32 33 34
        on right: 30 31


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • ID '(' identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID • '(' identifier_list ')' ';' declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PROGRAM ID '(' • identifier_list ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID •

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: PROGRAM ID '(' identifier_list • ')' ';' declarations compound_statement '.'
    3 identifier_list: identifier_list • ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: PROGRAM ID '(' identifier_list ')' • ';' declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID '(' identifier_list ')' ';' • declarations compound_statement '.'

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations • compound_statement '.'
    4 declarations: declarations • VAR identifier_list ':' type ';'

    VAR  shift, and go to state 13
    BEG  shift, and go to state 14

    compound_statement  go to state 15


State 13

    4 declarations: declarations VAR • identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 16


State 14

    8 compound_statement: BEG • statement_list END

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    READ   shift, and go to state 19
    IF     shift, and go to state 20

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 21
    statement_list       go to state 22
    statement            go to state 23
    @4                   go to state 24
    variable             go to state 25
    procedure_statement  go to state 26


State 15

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement • '.'

    '.'  shift, and go to state 27


State 16

    3 identifier_list: identifier_list • ',' ID
    4 declarations: declarations VAR identifier_list • ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 28


State 17

   24 variable: ID •
   25 procedure_statement: ID •

    ASSIGN    reduce using rule 24 (variable)
    $default  reduce using rule 25 (procedure_statement)


State 18

   23 statement: WRITE • '(' identifier_list ')'

    '('  shift, and go to state 29


State 19

   22 statement: READ • '(' identifier_list ')'

    '('  shift, and go to state 30


State 20

   17 statement: IF • expression @1 THEN @2 statement ELSE @3 statement

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable           go to state 34
    expression         go to state 35
    simple_expression  go to state 36
    term               go to state 37
    factor             go to state 38


State 21

   13 statement: compound_statement •

    $default  reduce using rule 13 (statement)


State 22

    8 compound_statement: BEG statement_list • END
   10 statement_list: statement_list • ';' statement

    END  shift, and go to state 39
    ';'  shift, and go to state 40


State 23

    9 statement_list: statement •

    $default  reduce using rule 9 (statement_list)


State 24

   21 statement: @4 • WHILE @5 expression DO @6 statement

    WHILE  shift, and go to state 41


State 25

   11 statement: variable • ASSIGN expression

    ASSIGN  shift, and go to state 42


State 26

   12 statement: procedure_statement •

    $default  reduce using rule 12 (statement)


State 27

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations compound_statement '.' •

    $default  reduce using rule 1 (program)


State 28

    4 declarations: declarations VAR identifier_list ':' • type ';'

    INT   shift, and go to state 43
    REAL  shift, and go to state 44

    type  go to state 45


State 29

   23 statement: WRITE '(' • identifier_list ')'

    ID  shift, and go to state 6

    identifier_list  go to state 46


State 30

   22 statement: READ '(' • identifier_list ')'

    ID  shift, and go to state 6

    identifier_list  go to state 47


State 31

   24 variable: ID •

    $default  reduce using rule 24 (variable)


State 32

   33 factor: NUM •

    $default  reduce using rule 33 (factor)


State 33

   34 factor: '(' • expression ')'

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable           go to state 34
    expression         go to state 48
    simple_expression  go to state 36
    term               go to state 37
    factor             go to state 38


State 34

   32 factor: variable •

    $default  reduce using rule 32 (factor)


State 35

   17 statement: IF expression • @1 THEN @2 statement ELSE @3 statement

    $default  reduce using rule 14 (@1)

    @1  go to state 49


State 36

   26 expression: simple_expression •
   27           | simple_expression • RELOP simple_expression
   29 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 50
    RELOP  shift, and go to state 51

    $default  reduce using rule 26 (expression)


State 37

   28 simple_expression: term •
   31 term: term • MULOP factor

    MULOP  shift, and go to state 52

    $default  reduce using rule 28 (simple_expression)


State 38

   30 term: factor •

    $default  reduce using rule 30 (term)


State 39

    8 compound_statement: BEG statement_list END •

    $default  reduce using rule 8 (compound_statement)


State 40

   10 statement_list: statement_list ';' • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    READ   shift, and go to state 19
    IF     shift, and go to state 20

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 21
    statement            go to state 53
    @4                   go to state 24
    variable             go to state 25
    procedure_statement  go to state 26


State 41

   21 statement: @4 WHILE • @5 expression DO @6 statement

    $default  reduce using rule 19 (@5)

    @5  go to state 54


State 42

   11 statement: variable ASSIGN • expression

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable           go to state 34
    expression         go to state 55
    simple_expression  go to state 36
    term               go to state 37
    factor             go to state 38


State 43

    6 type: INT •

    $default  reduce using rule 6 (type)


State 44

    7 type: REAL •

    $default  reduce using rule 7 (type)


State 45

    4 declarations: declarations VAR identifier_list ':' type • ';'

    ';'  shift, and go to state 56


State 46

    3 identifier_list: identifier_list • ',' ID
   23 statement: WRITE '(' identifier_list • ')'

    ')'  shift, and go to state 57
    ','  shift, and go to state 9


State 47

    3 identifier_list: identifier_list • ',' ID
   22 statement: READ '(' identifier_list • ')'

    ')'  shift, and go to state 58
    ','  shift, and go to state 9


State 48

   34 factor: '(' expression • ')'

    ')'  shift, and go to state 59


State 49

   17 statement: IF expression @1 • THEN @2 statement ELSE @3 statement

    THEN  shift, and go to state 60


State 50

   29 simple_expression: simple_expression ADDOP • term

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable  go to state 34
    term      go to state 61
    factor    go to state 38


State 51

   27 expression: simple_expression RELOP • simple_expression

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable           go to state 34
    simple_expression  go to state 62
    term               go to state 37
    factor             go to state 38


State 52

   31 term: term MULOP • factor

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable  go to state 34
    factor    go to state 63


State 53

   10 statement_list: statement_list ';' statement •

    $default  reduce using rule 10 (statement_list)


State 54

   21 statement: @4 WHILE @5 • expression DO @6 statement

    ID   shift, and go to state 31
    NUM  shift, and go to state 32
    '('  shift, and go to state 33

    variable           go to state 34
    expression         go to state 64
    simple_expression  go to state 36
    term               go to state 37
    factor             go to state 38


State 55

   11 statement: variable ASSIGN expression •

    $default  reduce using rule 11 (statement)


State 56

    4 declarations: declarations VAR identifier_list ':' type ';' •

    $default  reduce using rule 4 (declarations)


State 57

   23 statement: WRITE '(' identifier_list ')' •

    $default  reduce using rule 23 (statement)


State 58

   22 statement: READ '(' identifier_list ')' •

    $default  reduce using rule 22 (statement)


State 59

   34 factor: '(' expression ')' •

    $default  reduce using rule 34 (factor)


State 60

   17 statement: IF expression @1 THEN • @2 statement ELSE @3 statement

    $default  reduce using rule 15 (@2)

    @2  go to state 65


State 61

   29 simple_expression: simple_expression ADDOP term •
   31 term: term • MULOP factor

    MULOP  shift, and go to state 52

    $default  reduce using rule 29 (simple_expression)


State 62

   27 expression: simple_expression RELOP simple_expression •
   29 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 50

    $default  reduce using rule 27 (expression)


State 63

   31 term: term MULOP factor •

    $default  reduce using rule 31 (term)


State 64

   21 statement: @4 WHILE @5 expression • DO @6 statement

    DO  shift, and go to state 66


State 65

   17 statement: IF expression @1 THEN @2 • statement ELSE @3 statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    READ   shift, and go to state 19
    IF     shift, and go to state 20

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 21
    statement            go to state 67
    @4                   go to state 24
    variable             go to state 25
    procedure_statement  go to state 26


State 66

   21 statement: @4 WHILE @5 expression DO • @6 statement

    $default  reduce using rule 20 (@6)

    @6  go to state 68


State 67

   17 statement: IF expression @1 THEN @2 statement • ELSE @3 statement

    ELSE  shift, and go to state 69


State 68

   21 statement: @4 WHILE @5 expression DO @6 • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    READ   shift, and go to state 19
    IF     shift, and go to state 20

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 21
    statement            go to state 70
    @4                   go to state 24
    variable             go to state 25
    procedure_statement  go to state 26


State 69

   17 statement: IF expression @1 THEN @2 statement ELSE • @3 statement

    $default  reduce using rule 16 (@3)

    @3  go to state 71


State 70

   21 statement: @4 WHILE @5 expression DO @6 statement •

    $default  reduce using rule 21 (statement)


State 71

   17 statement: IF expression @1 THEN @2 statement ELSE @3 • statement

    ID     shift, and go to state 17
    BEG    shift, and go to state 14
    WRITE  shift, and go to state 18
    READ   shift, and go to state 19
    IF     shift, and go to state 20

    $default  reduce using rule 18 (@4)

    compound_statement   go to state 21
    statement            go to state 72
    @4                   go to state 24
    variable             go to state 25
    procedure_statement  go to state 26


State 72

   17 statement: IF expression @1 THEN @2 statement ELSE @3 statement •

    $default  reduce using rule 17 (statement)
