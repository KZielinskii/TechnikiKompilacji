Terminals unused in grammar

    LABEL
    PROC
    NONE
    NUM
    READ


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID '(' program_arguments ')' ';' declarations compound_statement '.'

    2 program_arguments: ID
    3                  | program_arguments ',' ID

    4 identifier_list: ID
    5                | identifier_list ',' ID

    6 declarations: declarations VAR identifier_list ':' INT ';'
    7             | ε

    8 compound_statement: BEG statement_list END

    9 statement_list: statement
   10               | statement_list ';' statement

   11 statement: variable ASSIGN expression
   12          | WRITE '(' variable ')'

   13 variable: ID

   14 expression: simple_expression

   15 simple_expression: term
   16                  | simple_expression ADDOP term

   17 term: factor
   18     | term MULOP factor

   19 factor: variable
   20       | VAL
   21       | '(' expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 12 21
    ')' (41) 1 12 21
    ',' (44) 3 5
    '.' (46) 1
    ':' (58) 6
    ';' (59) 1 6 10
    error (256)
    PROGRAM (258) 1
    ID (259) 1 2 3 4 5 13
    INT (260) 6
    VAR (261) 6
    VAL (262) 20
    LABEL (263)
    PROC (264)
    NONE (265)
    BEG (266) 8
    END (267) 8
    ASSIGN (268) 11
    ADDOP (269) 16
    MULOP (270) 18
    NUM (271)
    WRITE (272) 12
    READ (273)


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    program (26)
        on left: 1
        on right: 0
    program_arguments (27)
        on left: 2 3
        on right: 1 3
    identifier_list (28)
        on left: 4 5
        on right: 5 6
    declarations (29)
        on left: 6 7
        on right: 1 6
    compound_statement (30)
        on left: 8
        on right: 1
    statement_list (31)
        on left: 9 10
        on right: 8 10
    statement (32)
        on left: 11 12
        on right: 9 10
    variable (33)
        on left: 13
        on right: 11 12 19
    expression (34)
        on left: 14
        on right: 11 21
    simple_expression (35)
        on left: 15 16
        on right: 14 16
    term (36)
        on left: 17 18
        on right: 15 16 18
    factor (37)
        on left: 19 20 21
        on right: 17 18


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • ID '(' program_arguments ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID • '(' program_arguments ')' ';' declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PROGRAM ID '(' • program_arguments ')' ';' declarations compound_statement '.'

    ID  shift, and go to state 6

    program_arguments  go to state 7


State 6

    2 program_arguments: ID •

    $default  reduce using rule 2 (program_arguments)


State 7

    1 program: PROGRAM ID '(' program_arguments • ')' ';' declarations compound_statement '.'
    3 program_arguments: program_arguments • ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: PROGRAM ID '(' program_arguments ')' • ';' declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 program_arguments: program_arguments ',' • ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID '(' program_arguments ')' ';' • declarations compound_statement '.'

    $default  reduce using rule 7 (declarations)

    declarations  go to state 12


State 11

    3 program_arguments: program_arguments ',' ID •

    $default  reduce using rule 3 (program_arguments)


State 12

    1 program: PROGRAM ID '(' program_arguments ')' ';' declarations • compound_statement '.'
    6 declarations: declarations • VAR identifier_list ':' INT ';'

    VAR  shift, and go to state 13
    BEG  shift, and go to state 14

    compound_statement  go to state 15


State 13

    6 declarations: declarations VAR • identifier_list ':' INT ';'

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 14

    8 compound_statement: BEG • statement_list END

    ID     shift, and go to state 18
    WRITE  shift, and go to state 19

    statement_list  go to state 20
    statement       go to state 21
    variable        go to state 22


State 15

    1 program: PROGRAM ID '(' program_arguments ')' ';' declarations compound_statement • '.'

    '.'  shift, and go to state 23


State 16

    4 identifier_list: ID •

    $default  reduce using rule 4 (identifier_list)


State 17

    5 identifier_list: identifier_list • ',' ID
    6 declarations: declarations VAR identifier_list • ':' INT ';'

    ','  shift, and go to state 24
    ':'  shift, and go to state 25


State 18

   13 variable: ID •

    $default  reduce using rule 13 (variable)


State 19

   12 statement: WRITE • '(' variable ')'

    '('  shift, and go to state 26


State 20

    8 compound_statement: BEG statement_list • END
   10 statement_list: statement_list • ';' statement

    END  shift, and go to state 27
    ';'  shift, and go to state 28


State 21

    9 statement_list: statement •

    $default  reduce using rule 9 (statement_list)


State 22

   11 statement: variable • ASSIGN expression

    ASSIGN  shift, and go to state 29


State 23

    1 program: PROGRAM ID '(' program_arguments ')' ';' declarations compound_statement '.' •

    $default  reduce using rule 1 (program)


State 24

    5 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 30


State 25

    6 declarations: declarations VAR identifier_list ':' • INT ';'

    INT  shift, and go to state 31


State 26

   12 statement: WRITE '(' • variable ')'

    ID  shift, and go to state 18

    variable  go to state 32


State 27

    8 compound_statement: BEG statement_list END •

    $default  reduce using rule 8 (compound_statement)


State 28

   10 statement_list: statement_list ';' • statement

    ID     shift, and go to state 18
    WRITE  shift, and go to state 19

    statement  go to state 33
    variable   go to state 22


State 29

   11 statement: variable ASSIGN • expression

    ID   shift, and go to state 18
    VAL  shift, and go to state 34
    '('  shift, and go to state 35

    variable           go to state 36
    expression         go to state 37
    simple_expression  go to state 38
    term               go to state 39
    factor             go to state 40


State 30

    5 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 5 (identifier_list)


State 31

    6 declarations: declarations VAR identifier_list ':' INT • ';'

    ';'  shift, and go to state 41


State 32

   12 statement: WRITE '(' variable • ')'

    ')'  shift, and go to state 42


State 33

   10 statement_list: statement_list ';' statement •

    $default  reduce using rule 10 (statement_list)


State 34

   20 factor: VAL •

    $default  reduce using rule 20 (factor)


State 35

   21 factor: '(' • expression ')'

    ID   shift, and go to state 18
    VAL  shift, and go to state 34
    '('  shift, and go to state 35

    variable           go to state 36
    expression         go to state 43
    simple_expression  go to state 38
    term               go to state 39
    factor             go to state 40


State 36

   19 factor: variable •

    $default  reduce using rule 19 (factor)


State 37

   11 statement: variable ASSIGN expression •

    $default  reduce using rule 11 (statement)


State 38

   14 expression: simple_expression •
   16 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 44

    $default  reduce using rule 14 (expression)


State 39

   15 simple_expression: term •
   18 term: term • MULOP factor

    MULOP  shift, and go to state 45

    $default  reduce using rule 15 (simple_expression)


State 40

   17 term: factor •

    $default  reduce using rule 17 (term)


State 41

    6 declarations: declarations VAR identifier_list ':' INT ';' •

    $default  reduce using rule 6 (declarations)


State 42

   12 statement: WRITE '(' variable ')' •

    $default  reduce using rule 12 (statement)


State 43

   21 factor: '(' expression • ')'

    ')'  shift, and go to state 46


State 44

   16 simple_expression: simple_expression ADDOP • term

    ID   shift, and go to state 18
    VAL  shift, and go to state 34
    '('  shift, and go to state 35

    variable  go to state 36
    term      go to state 47
    factor    go to state 40


State 45

   18 term: term MULOP • factor

    ID   shift, and go to state 18
    VAL  shift, and go to state 34
    '('  shift, and go to state 35

    variable  go to state 36
    factor    go to state 48


State 46

   21 factor: '(' expression ')' •

    $default  reduce using rule 21 (factor)


State 47

   16 simple_expression: simple_expression ADDOP term •
   18 term: term • MULOP factor

    MULOP  shift, and go to state 45

    $default  reduce using rule 16 (simple_expression)


State 48

   18 term: term MULOP factor •

    $default  reduce using rule 18 (term)
